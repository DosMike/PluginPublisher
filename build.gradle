import org.gradle.api.artifacts.ProjectDependency

plugins {
    id 'java'
    id 'idea'
    id 'maven'
    id 'java-gradle-plugin'
}

group 'com.github.dosmike'
version '1.0.2'

repositories {
    mavenCentral()
    jcenter()
}

idea.module.downloadJavadoc = true

dependencies {
//    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
//    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

//    testImplementation 'junit:junit:4.+'

    compileOnly 'org.jetbrains:annotations:16.0.2'

    compile "org.apache.logging.log4j:log4j-core:2.13.0"
    compile "org.apache.logging.log4j:log4j-api:2.13.0"
    compile 'net.dv8tion:JDA:4.1.1_105'
    compile 'com.google.code.gson:gson:2.8.6'

//    javadocs https://docs.gradle.org/5.6.4/javadoc/index.html
    compile gradleApi();
}

//test {
//    maxParallelForks 1 // these really need to run in sequence since i'm not using a testing framework to fake net traffic
//    useJUnitPlatform()
//}

// as gradle plugin
gradlePlugin {
    plugins {
        simplePlugin {
            id = project.group+'.'+project.name
            implementationClass = 'de.dosmike.sponge.pluginpublisher.gradle.PluginPublisherPlugin'
        }
    }
}

//Rest is here in order to use this project as dependency (taken from jitpack example)
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}

// To specify a license in the pom:
install {
    repositories.mavenInstaller {
        pom.project {
            licenses {
                license {
                    name 'MIT License'
                    url 'https://github.com/DosMike/PluginPublisher/blob/master/LICENSE'
                    distribution 'repo'
                }
            }
        }
    }
}

wrapper {
    gradleVersion = "5.6.4"
    distributionType = Wrapper.DistributionType.ALL
}